<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAGYktHRAD/AP8A/6C9p5MAAAG6SURBVEhL7ZPLK0RhGMaHQkjZKbIgdysmO0uiLOyU/CtSYsPS
        xkYpi1lYyB8glxVpNrM4GnPmElOzkDAL5Zbj9+o5RThnRpOVXz31zfPeZr55v8g/FcN13cF0Or2M9lEK
        nWYymQ38ac/zqpT2OxzHqaXhGnpB3ndi2AnqUUl58C3raLKnZq9oB2+GhmOcJ9EqKiKLF/FHVFo6FK6r
        wR3NJ2R/IplMthI/Vl6ez00KhZPNZnspsit65Twu+1tyuVwzeYYNmpcdDslLKtqVFQhXNat8V1Y4JB9a
        EcVzsgLJ5/P15D9ajV2h7GBITmrIqKxQyL+0GhSVFQyJpxoyJSsQeyvk+5vWJTsYEjdVsCIrELZvSPnF
        eDxeIzsYe8kqumW7WmT/CHk7yo/JCoefX01BXIUHiUSiUaEvEN9S3jNfbkB2abD/fRT693xmr922SGFb
        2xG0rbhH/KrkzfoIhcM0yvqN0APKoZsP3hO61vkc2lReOnZVDFqgwYUa+bpHMWLd9r9xduRfpFKpTpWX
        h60p19FBkyhN+guFQoNC71RsUBh/Nojm7ciwx3wku/IwwAYdsjiLsv4pl0jkDRNyAlyN35c9AAAAAElF
        TkSuQmCC
</value>
  </data>
  <data name="picboxPrevPage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAGYktHRAD/AP8A/6C9p5MAAADfSURBVEhL7ZUxCsIwAEUr4uLg1sHZxdFdcPIGDl5C8AreoE07
        dXWsR3DyAp7AWXB0VND4Ag2E2C5NAiL98JaWvkdbaKNu/7c8z9dCiFOWZXF1yN+Kohgi3oNUEJtXp/wM
        6QTOOuA9gmyF9G4GvEV4PANkAt6mXOMcSZJkXL3cL7nGKYJgCTdTWEfrCBdv4GHKmmgV4aJpnayJ370T
        PV76DMnFlto4RdSQjOBgSm2cI2pSyh6iLcKnHVB4ieilabpAeg0aUUMawzFoRK0syz5fgR2BV7CIHvJw
        /5NugRZFH+IqWz1I5raCAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="picboxNextPage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAGYktHRAD/AP8A/6C9p5MAAADeSURBVEhLYxgFQwdMnz5dbNKkSYcmTpwYBhWiPpg8ebI10JL/
        ULxo5syZXFAp6gE0S0D4HBArQ6WpA7BYAsIfgeLBUCWUAxyWgPA/IJ4IDD5WqFLyAR5LwBiYIA729/dL
        QpWTBwhZAsUvgZY5Q7WQDoi0BIR/AnEOVBtpgARLwHjKlClqUK3Eg8Hkk9vAyDeAaiEdEGHJaiDmgyon
        D+Cx5BdQLv////+MUKXkAxyWPAViW6gSygEWS3YDsShUmjoAyZK/wAzXsGrVKmaoFPUAqD4BFR00rU9G
        wQABBgYAryhbU9ZENqsAAAAASUVORK5CYII=
</value>
  </data>
</root>